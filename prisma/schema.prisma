// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Table {
  id     String @id @default(uuid())
  number Int    @unique

  createdAt DateTime @default(now()) @map("created_at") // @map("created_at") rename for mysql database convention
  updatedAt DateTime @updatedAt @map("updated_at") // @map("updated_at") rename for mysql database convention

  Orders Order[] // one to many relation

  @@map("table") // rename the table in the database
}

model Product {
  id          String @id @default(uuid())
  name        String @unique
  description String
  price       Float
  image       String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  orders Order[] // many to many relation

  @@map("product") // rename the table in the database
}

model User {
  id       String @id @default(uuid())
  name     String
  username String @unique
  email    String @unique
  password String
  image    String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  orders Order[] // one to many relationship

  @@map("user") // rename the table in the database
}

model Order {
  id String @id @default(uuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  table   Table  @relation(fields: [tableId], references: [id])
  tableId String @map("table_id")

  products Product[] // many to many relation

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("order") // rename the table in the database
}
